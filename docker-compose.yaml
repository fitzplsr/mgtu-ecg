version: "3.9"

services:
  backend:
    image: fitzplsr/mgtu-ecg:latest
    container_name: backend
    restart: always
    ports:
      - '4000:4000'
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    networks:
      - main-network


  db:
    container_name: postgres
    image: postgres
    restart: always
    command:
      - "postgres"
      - "-c"
      - "max_connections=10"
      - "-c"
      - "shared_buffers=100MB"
      - "-c"
      - "effective_cache_size=0.5GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=1GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    env_file:
      - ./.env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
    networks:
      - main-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - main-network
  #    volumes:
  #      - "${REDIS_DATA_DIR:-./data}:/data"
  #      - "./redis.conf:/usr/local/etc/redis/redis.conf"

#  minio:
#    image: minio/minio
#    ports:
#      - ${MINIO_PORT}:9000
#    environment:
#      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
#      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
#    volumes:
#      - minio_data:/data
#    command: server /data
#    env_file:
#      - ./.env

networks:
  main-network:
    driver: bridge

#volumes:
#  minio_data:
